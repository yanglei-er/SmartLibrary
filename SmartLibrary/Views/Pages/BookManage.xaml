<Page
    x:Class="SmartLibrary.Views.Pages.BookManage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:SmartLibrary.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="clr-namespace:Shared.Extensions;assembly=Shared"
    xmlns:local="clr-namespace:SmartLibrary.Views.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sharedConverters="clr-namespace:Shared.Converters;assembly=Shared"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    Title="BookManage"
    d:DataContext="{d:DesignInstance local:BookManage,
                                     IsDesignTimeCreatable=False}"
    d:DesignHeight="520"
    d:DesignWidth="800"
    ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
    ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    AllowDrop="True"
    DragOver="Page_DragOver"
    Drop="Page_Drop"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    ScrollViewer.CanContentScroll="False"
    mc:Ignorable="d">

    <Page.Resources>
        <sharedConverters:BoolToAppearanceConverter x:Key="BoolToAppearanceConverter" />
        <Style x:Key="CenterAlignmentStyle" TargetType="TextBlock">
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="LeftAlignmentStyle" TargetType="TextBlock">
            <Setter Property="TextAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="4,0,4,0" />
        </Style>
        <Style BasedOn="{StaticResource MyButtonStyle}" TargetType="ui:Button" />
        <Style x:Key="EditButton" TargetType="ui:Button">
            <Setter Property="Background" Value="{x:Null}" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Padding="5"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="5">
                            <ui:SymbolIcon Symbol="Edit24" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource EditButtonIsMouseOverBackground}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource EditButtonIsPressedBackground}" />
                    <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundPressed}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="RemoveButton"
            BasedOn="{StaticResource EditButton}"
            TargetType="ui:Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Padding="5"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="5">
                            <ui:SymbolIcon Symbol="Delete24" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource RemoveButtonIsMouseOverBackground}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource RemoveButtonIsPressedBackground}" />
                    <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundPressed}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="AddButton"
            BasedOn="{StaticResource EditButton}"
            TargetType="ui:Button">
            <Setter Property="Background" Value="{DynamicResource AddButtonBackground}" />
            <Setter Property="Height" Value="37" />
            <Setter Property="Width" Value="50" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Padding="5"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="5">
                            <ui:SymbolIcon Symbol="Add24" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource AddButtonIsMouseOverBackground}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource AddButtonIsPressedBackground}" />
                    <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundPressed}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource AddButtonIsEnabledBackground}" />
                    <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="DelButton"
            BasedOn="{StaticResource EditButton}"
            TargetType="ui:Button">
            <Setter Property="Background" Value="{DynamicResource DelButtonBackground}" />
            <Setter Property="Height" Value="37" />
            <Setter Property="Width" Value="50" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Padding="5"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="5">
                            <ui:SymbolIcon Symbol="Delete24" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource DelButtonIsMouseOverBackground}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource DelButtonIsPressedBackground}" />
                    <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundPressed}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource DelButtonIsEnabledBackground}" />
                    <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundDisabled}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>

    <Grid Margin="16,16,16,12">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ui:TextBox
                Grid.Column="0"
                Icon="{ui:SymbolIcon Search24}"
                IconPlacement="Right"
                IsEnabled="{Binding ViewModel.IsTopbarEnabled, Mode=OneWay}"
                PlaceholderText="快速查找ISBN、书名、作者、书架号..."
                PreviewKeyDown="SearchBox_PreviewKeyDown"
                Text="{Binding ViewModel.AutoSuggestBoxText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=500}" />
            <ui:Button
                Grid.Column="1"
                Height="35"
                Margin="10,0,0,0"
                Command="{Binding ViewModel.TopButtonClickCommand, Mode=OneWay}"
                CommandParameter="Import"
                Content="导入"
                FontSize="18"
                ToolTip="导入数据库" />
            <ui:Button
                Grid.Column="2"
                Height="35"
                Margin="10,0,0,0"
                Command="{Binding ViewModel.TopButtonClickCommand, Mode=OneWay}"
                CommandParameter="Export"
                Content="导出"
                FontSize="18"
                IsEnabled="{Binding ViewModel.IsTopbarEnabled, Mode=OneWay}"
                ToolTip="导出数据库" />
            <ui:Button
                x:Name="AddButton"
                Grid.Column="3"
                Margin="8,0,0,0"
                Command="{Binding ViewModel.AddBookCommand, Mode=OneWay}"
                IsEnabled="{Binding ViewModel.IsTopbarEnabled, Mode=OneWay}"
                Style="{StaticResource AddButton}"
                ToolTip="添加图书" />
            <ui:Button
                x:Name="DelButton"
                Grid.Column="4"
                Margin="8,0,0,0"
                Command="{Binding ViewModel.DelBooksCommand, Mode=OneWay}"
                CommandParameter="{Binding ElementName=DataGrid, Path=SelectedItems}"
                IsEnabled="{Binding ViewModel.IsDelButtonEnabled, Mode=TwoWay}"
                Style="{StaticResource DelButton}"
                ToolTip="删除所选图书" />
        </Grid>
        <ui:DataGrid
            x:Name="DataGrid"
            Grid.Row="1"
            Margin="0,12,0,0"
            d:ItemsSource="{d:SampleData ItemCount=15}"
            AutoGenerateColumns="False"
            BeginningEdit="DataGrid_BeginningEdit"
            CanUserAddRows="False"
            EnableColumnVirtualization="True"
            EnableRowVirtualization="True"
            HorizontalScrollBarVisibility="Hidden"
            ItemsSource="{Binding ViewModel.DataGridItems, Mode=TwoWay}"
            RowEditEnding="DataGrid_RowEditEnding"
            RowHeaderWidth="0"
            ScrollViewer.CanContentScroll="True"
            SelectionChanged="DataGrid_SelectionChanged"
            SelectionUnit="FullRow"
            VirtualizingPanel.IsContainerVirtualizable="True"
            VirtualizingPanel.IsVirtualizing="True"
            VirtualizingPanel.VirtualizationMode="Recycling">
            <ui:DataGrid.ColumnHeaderStyle>
                <Style BasedOn="{StaticResource DefaultDataGridColumnHeaderStyle}" TargetType="DataGridColumnHeader">
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                </Style>
            </ui:DataGrid.ColumnHeaderStyle>
            <ui:DataGrid.RowStyle>
                <Style BasedOn="{StaticResource DefaultDataGridRowStyle}" TargetType="DataGridRow">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource AccentTextFillColorTertiaryBrush}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ui:DataGrid.RowStyle>
            <ui:DataGrid.Columns>
                <DataGridTemplateColumn
                    Width="130"
                    CanUserResize="False"
                    CanUserSort="False"
                    Header="ISBN"
                    IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox
                                VerticalAlignment="Center"
                                Style="{StaticResource SelectableTextBlockStyle}"
                                Text="{Binding isbn, Mode=OneWay}"
                                TextAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn
                    Width="2*"
                    Binding="{Binding bookName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ElementStyle="{StaticResource LeftAlignmentStyle}"
                    Header="书名" />
                <DataGridTextColumn
                    Width="*"
                    Binding="{Binding author, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ElementStyle="{StaticResource LeftAlignmentStyle}"
                    Header="作者" />
                <DataGridTextColumn
                    Width="60"
                    Binding="{Binding shelfNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    CanUserResize="False"
                    ElementStyle="{StaticResource CenterAlignmentStyle}"
                    Header="书架号" />
                <DataGridTemplateColumn
                    Width="70"
                    CanUserResize="False"
                    Header="是否借出">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox
                                HorizontalAlignment="Center"
                                Click="CheckBox_Click"
                                IsChecked="{Binding isBorrowed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    Width="58"
                    CanUserResize="False"
                    Header="操作">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <ui:Button
                                    Margin="2,0,0,0"
                                    Command="{Binding ElementName=DataGrid, Path=DataContext.ViewModel.EditBookCommand, Mode=OneWay}"
                                    CommandParameter="{Binding ElementName=DataGrid, Path=SelectedItem}"
                                    Style="{StaticResource EditButton}"
                                    ToolTip="编辑图书信息" />
                                <ui:Button
                                    Margin="2,0,2,0"
                                    Command="{Binding ElementName=DataGrid, Path=DataContext.ViewModel.DelOneBookCommand, Mode=OneWay}"
                                    CommandParameter="{Binding ElementName=DataGrid, Path=SelectedItem}"
                                    Style="{StaticResource RemoveButton}"
                                    ToolTip="删除图书" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </ui:DataGrid.Columns>
        </ui:DataGrid>
        <Grid Grid.Row="1" Visibility="{Binding ViewModel.DatabaseEmpty, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StackPanel
                Margin="0,0,0,8"
                HorizontalAlignment="Center"
                VerticalAlignment="Center">
                <ui:Image
                    Width="148"
                    Height="148"
                    RenderOptions.BitmapScalingMode="HighQuality"
                    Source="/Shared;Component/Assets/databaseEmpty.png" />
                <ui:TextBlock
                    Margin="0,12,0,0"
                    FontSize="36"
                    FontTypography="Title"
                    Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                    Text="什么都没有 ┑(￣Д ￣)┍" />
            </StackPanel>
        </Grid>
        <Grid Grid.Row="1" Visibility="{Binding ViewModel.MissingDatabase, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StackPanel
                Margin="0,0,0,20"
                HorizontalAlignment="Center"
                VerticalAlignment="Center">
                <ui:Image
                    Width="168"
                    Height="168"
                    RenderOptions.BitmapScalingMode="HighQuality"
                    Source="/Shared;Component/Assets/warning.png" />
                <ui:TextBlock
                    HorizontalAlignment="Center"
                    FontSize="36"
                    FontTypography="Title"
                    Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                    Text="糟糕！数据库找不到了w(ﾟДﾟ)w" />
                <StackPanel
                    Margin="0,16,0,0"
                    HorizontalAlignment="Center"
                    Orientation="Horizontal">
                    <ui:Button
                        MinWidth="180"
                        Margin="0,0,8,0"
                        Command="{Binding ViewModel.RefreshDatabaseCommand, Mode=OneWay}"
                        Content="刷新"
                        FontSize="24" />
                    <ui:Button
                        MinWidth="180"
                        Margin="8,0,0,0"
                        Command="{Binding ViewModel.CreateDatabaseCommand, Mode=OneWay}"
                        Content="新建"
                        FontSize="24" />
                </StackPanel>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="2" Margin="0,12,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <StackPanel
                Grid.Column="0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <ui:TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="18"
                    Text="共" />
                <ui:TextBlock
                    Margin="4,0,4,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="18"
                    Text="{Binding ViewModel.TotalCount, Mode=OneWay}" />
                <ui:TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="18"
                    Text="条" />
                <ui:TextBlock
                    Margin="12,0,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="18"
                    Text="每页" />
                <ComboBox
                    Height="32"
                    Margin="4,0,4,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    IsEnabled="{Binding ViewModel.IsBottombarEnabled, Mode=OneWay}"
                    ItemsSource="{Binding ViewModel.PageCountList, Mode=OneTime}"
                    SelectedIndex="{Binding ViewModel.DisplayIndex, Mode=TwoWay}" />
                <ui:TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="18"
                    Text="条" />
            </StackPanel>
            <StackPanel
                Grid.Column="1"
                Margin="8,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                IsEnabled="{Binding ViewModel.IsBottombarEnabled, Mode=OneWay}"
                Orientation="Horizontal">
                <ui:Button
                    Margin="4,0,12,0"
                    Command="{Binding ViewModel.PageButtonClickCommand, Mode=OneWay}"
                    CommandParameter="PageUp"
                    Icon="{ui:SymbolIcon ChevronLeft24}"
                    IsEnabled="{Binding ViewModel.IsPageUpEnabled, Mode=OneWay}"
                    ToolTip="上一页" />
                <ItemsControl ItemsSource="{Binding ViewModel.PageButtonList, Mode=OneWay}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ui:Button
                                Margin="4,0,0,0"
                                Appearance="{Binding IsCurrentPage, Converter={StaticResource BoolToAppearanceConverter}}"
                                Command="{Binding ElementName=DataGrid, Path=DataContext.ViewModel.GotoPageCommand, Mode=OneWay}"
                                CommandParameter="{Binding Name, Mode=OneWay}"
                                Content="{Binding Name, Mode=OneWay}"
                                IsEnabled="{Binding IsEnabled, Mode=OneWay}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
                <ui:Button
                    Margin="16,0,0,0"
                    Command="{Binding ViewModel.PageButtonClickCommand, Mode=OneWay}"
                    CommandParameter="PageDown"
                    Icon="{ui:SymbolIcon ChevronRight24}"
                    IsEnabled="{Binding ViewModel.IsPageDownEnabled, Mode=OneWay}"
                    ToolTip="下一页" />
            </StackPanel>
            <StackPanel
                Grid.Column="2"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <TextBox Name="XuNiBox" Width="0" />
                <ui:Flyout
                    VerticalAlignment="Center"
                    IsOpen="{Binding ViewModel.IsFlyoutOpen, Mode=TwoWay}"
                    Placement="Top">
                    <TextBlock
                        Width="200"
                        HorizontalAlignment="Center"
                        FontSize="18"
                        Text="{Binding ViewModel.FlyoutText, Mode=OneWay}"
                        TextWrapping="WrapWithOverflow" />
                </ui:Flyout>
                <ui:TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="18"
                    Text="前往" />
                <ui:TextBox
                    x:Name="textBox"
                    Height="32"
                    Margin="4,0,4,0"
                    extensions:TextBoxAttachedProperties.IsOnlyNumber="True"
                    IsEnabled="{Binding ViewModel.IsBottombarEnabled, Mode=OneWay}"
                    PreviewKeyDown="TextBox_PreviewKeyDown"
                    Text="{Binding ViewModel.TargetPage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <ui:TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="18"
                    Text="页" />
            </StackPanel>
        </Grid>
    </Grid>
</Page>